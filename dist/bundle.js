(()=>{"use strict";var e={959:(e,r,n)=>{n.d(r,{Z:()=>c});var t=n(15),o=n.n(t),i=n(645),a=n.n(i)()(o());a.push([e.id,"\r\n.board {\r\n    display: flex;\r\n    flex-direction: column;\r\n\r\n}\r\n\r\n.row {\r\n    display: flex;\r\n    flex-direction: row;\r\n}\r\n\r\n.cell {\r\n    width: 30px;\r\n    height: 30px;\r\n\r\n    border: 1px solid black;\r\n}","",{version:3,sources:["webpack://./src/styles/board.css"],names:[],mappings:";AACA;IACI,aAAa;IACb,sBAAsB;;AAE1B;;AAEA;IACI,aAAa;IACb,mBAAmB;AACvB;;AAEA;IACI,WAAW;IACX,YAAY;;IAEZ,uBAAuB;AAC3B",sourcesContent:["\r\n.board {\r\n    display: flex;\r\n    flex-direction: column;\r\n\r\n}\r\n\r\n.row {\r\n    display: flex;\r\n    flex-direction: row;\r\n}\r\n\r\n.cell {\r\n    width: 30px;\r\n    height: 30px;\r\n\r\n    border: 1px solid black;\r\n}"],sourceRoot:""}]);const c=a},712:(e,r,n)=>{n.d(r,{Z:()=>c});var t=n(15),o=n.n(t),i=n(645),a=n.n(i)()(o());a.push([e.id,".empty {\r\n    background-color: white;\r\n}\r\n\r\n.static {\r\n    background-color: rgba(0, 0, 0, 0.8);\r\n}\r\n\r\n.active {\r\n    background-color: rgba(0, 0, 0, 1);\r\n}","",{version:3,sources:["webpack://./src/styles/cellState.css"],names:[],mappings:"AAAA;IACI,uBAAuB;AAC3B;;AAEA;IACI,oCAAoC;AACxC;;AAEA;IACI,kCAAkC;AACtC",sourcesContent:[".empty {\r\n    background-color: white;\r\n}\r\n\r\n.static {\r\n    background-color: rgba(0, 0, 0, 0.8);\r\n}\r\n\r\n.active {\r\n    background-color: rgba(0, 0, 0, 1);\r\n}"],sourceRoot:""}]);const c=a},394:(e,r,n)=>{n.d(r,{Z:()=>c});var t=n(15),o=n.n(t),i=n(645),a=n.n(i)()(o());a.push([e.id,"\r\nbody {\r\n    position: absolute;\r\n    top: 0px;\r\n    bottom: 0px;\r\n    left: 0px;\r\n    right: 0px;\r\n    \r\n    background-color: lightgrey;\r\n\r\n    display: flex;\r\n    flex-direction: column;\r\n    justify-content: center;\r\n    align-items: center;\r\n}","",{version:3,sources:["webpack://./src/styles/center.css"],names:[],mappings:";AACA;IACI,kBAAkB;IAClB,QAAQ;IACR,WAAW;IACX,SAAS;IACT,UAAU;;IAEV,2BAA2B;;IAE3B,aAAa;IACb,sBAAsB;IACtB,uBAAuB;IACvB,mBAAmB;AACvB",sourcesContent:["\r\nbody {\r\n    position: absolute;\r\n    top: 0px;\r\n    bottom: 0px;\r\n    left: 0px;\r\n    right: 0px;\r\n    \r\n    background-color: lightgrey;\r\n\r\n    display: flex;\r\n    flex-direction: column;\r\n    justify-content: center;\r\n    align-items: center;\r\n}"],sourceRoot:""}]);const c=a},434:(e,r,n)=>{n.d(r,{Z:()=>c});var t=n(15),o=n.n(t),i=n(645),a=n.n(i)()(o());a.push([e.id,"html, body, div, span, applet, object, iframe,\r\nh1, h2, h3, h4, h5, h6, p, blockquote, pre,\r\na, abbr, acronym, address, big, cite, code,\r\ndel, dfn, em, img, ins, kbd, q, s, samp,\r\nsmall, strike, strong, sub, sup, tt, var,\r\nb, u, i, center,\r\ndl, dt, dd, ol, ul, li,\r\nfieldset, form, label, legend,\r\ntable, caption, tbody, tfoot, thead, tr, th, td,\r\narticle, aside, canvas, details, embed, \r\nfigure, figcaption, footer, header, hgroup, \r\nmenu, nav, output, ruby, section, summary,\r\ntime, mark, audio, video {\r\n\tmargin: 0;\r\n\tpadding: 0;\r\n\tborder: 0;\r\n\tfont-size: 62.5%;\r\n    font-family: monospace;\r\n\tfont: inherit;\r\n\tvertical-align: baseline;\r\n    box-sizing: border-box;\r\n}\r\n/* HTML5 display-role reset for older browsers */\r\narticle, aside, details, figcaption, figure, \r\nfooter, header, hgroup, menu, nav, section {\r\n\tdisplay: block;\r\n}\r\nbody {\r\n\tline-height: 1;\r\n}\r\nol, ul {\r\n\tlist-style: none;\r\n}\r\nblockquote, q {\r\n\tquotes: none;\r\n}\r\nblockquote:before, blockquote:after,\r\nq:before, q:after {\r\n\tcontent: '';\r\n\tcontent: none;\r\n}\r\ntable {\r\n\tborder-collapse: collapse;\r\n\tborder-spacing: 0;\r\n}","",{version:3,sources:["webpack://./src/styles/reset.css"],names:[],mappings:"AAAA;;;;;;;;;;;;;CAaC,SAAS;CACT,UAAU;CACV,SAAS;CACT,gBAAgB;IACb,sBAAsB;CACzB,aAAa;CACb,wBAAwB;IACrB,sBAAsB;AAC1B;AACA,gDAAgD;AAChD;;CAEC,cAAc;AACf;AACA;CACC,cAAc;AACf;AACA;CACC,gBAAgB;AACjB;AACA;CACC,YAAY;AACb;AACA;;CAEC,WAAW;CACX,aAAa;AACd;AACA;CACC,yBAAyB;CACzB,iBAAiB;AAClB",sourcesContent:["html, body, div, span, applet, object, iframe,\r\nh1, h2, h3, h4, h5, h6, p, blockquote, pre,\r\na, abbr, acronym, address, big, cite, code,\r\ndel, dfn, em, img, ins, kbd, q, s, samp,\r\nsmall, strike, strong, sub, sup, tt, var,\r\nb, u, i, center,\r\ndl, dt, dd, ol, ul, li,\r\nfieldset, form, label, legend,\r\ntable, caption, tbody, tfoot, thead, tr, th, td,\r\narticle, aside, canvas, details, embed, \r\nfigure, figcaption, footer, header, hgroup, \r\nmenu, nav, output, ruby, section, summary,\r\ntime, mark, audio, video {\r\n\tmargin: 0;\r\n\tpadding: 0;\r\n\tborder: 0;\r\n\tfont-size: 62.5%;\r\n    font-family: monospace;\r\n\tfont: inherit;\r\n\tvertical-align: baseline;\r\n    box-sizing: border-box;\r\n}\r\n/* HTML5 display-role reset for older browsers */\r\narticle, aside, details, figcaption, figure, \r\nfooter, header, hgroup, menu, nav, section {\r\n\tdisplay: block;\r\n}\r\nbody {\r\n\tline-height: 1;\r\n}\r\nol, ul {\r\n\tlist-style: none;\r\n}\r\nblockquote, q {\r\n\tquotes: none;\r\n}\r\nblockquote:before, blockquote:after,\r\nq:before, q:after {\r\n\tcontent: '';\r\n\tcontent: none;\r\n}\r\ntable {\r\n\tborder-collapse: collapse;\r\n\tborder-spacing: 0;\r\n}"],sourceRoot:""}]);const c=a},645:e=>{e.exports=function(e){var r=[];return r.toString=function(){return this.map((function(r){var n=e(r);return r[2]?"@media ".concat(r[2]," {").concat(n,"}"):n})).join("")},r.i=function(e,n,t){"string"==typeof e&&(e=[[null,e,""]]);var o={};if(t)for(var i=0;i<this.length;i++){var a=this[i][0];null!=a&&(o[a]=!0)}for(var c=0;c<e.length;c++){var u=[].concat(e[c]);t&&o[u[0]]||(n&&(u[2]?u[2]="".concat(n," and ").concat(u[2]):u[2]=n),r.push(u))}},r}},15:e=>{function r(e,r){(null==r||r>e.length)&&(r=e.length);for(var n=0,t=new Array(r);n<r;n++)t[n]=e[n];return t}e.exports=function(e){var n,t,o=(t=4,function(e){if(Array.isArray(e))return e}(n=e)||function(e,r){if("undefined"!=typeof Symbol&&Symbol.iterator in Object(e)){var n=[],t=!0,o=!1,i=void 0;try{for(var a,c=e[Symbol.iterator]();!(t=(a=c.next()).done)&&(n.push(a.value),!r||n.length!==r);t=!0);}catch(e){o=!0,i=e}finally{try{t||null==c.return||c.return()}finally{if(o)throw i}}return n}}(n,t)||function(e,n){if(e){if("string"==typeof e)return r(e,n);var t=Object.prototype.toString.call(e).slice(8,-1);return"Object"===t&&e.constructor&&(t=e.constructor.name),"Map"===t||"Set"===t?Array.from(e):"Arguments"===t||/^(?:Ui|I)nt(?:8|16|32)(?:Clamped)?Array$/.test(t)?r(e,n):void 0}}(n,t)||function(){throw new TypeError("Invalid attempt to destructure non-iterable instance.\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method.")}()),i=o[1],a=o[3];if("function"==typeof btoa){var c=btoa(unescape(encodeURIComponent(JSON.stringify(a)))),u="sourceMappingURL=data:application/json;charset=utf-8;base64,".concat(c),l="/*# ".concat(u," */"),s=a.sources.map((function(e){return"/*# sourceURL=".concat(a.sourceRoot||"").concat(e," */")}));return[i].concat(s).concat([l]).join("\n")}return[i].join("\n")}},379:(e,r,n)=>{var t,o=function(){var e={};return function(r){if(void 0===e[r]){var n=document.querySelector(r);if(window.HTMLIFrameElement&&n instanceof window.HTMLIFrameElement)try{n=n.contentDocument.head}catch(e){n=null}e[r]=n}return e[r]}}(),i=[];function a(e){for(var r=-1,n=0;n<i.length;n++)if(i[n].identifier===e){r=n;break}return r}function c(e,r){for(var n={},t=[],o=0;o<e.length;o++){var c=e[o],u=r.base?c[0]+r.base:c[0],l=n[u]||0,s="".concat(u," ").concat(l);n[u]=l+1;var f=a(s),d={css:c[1],media:c[2],sourceMap:c[3]};-1!==f?(i[f].references++,i[f].updater(d)):i.push({identifier:s,updater:h(d,r),references:1}),t.push(s)}return t}function u(e){var r=document.createElement("style"),t=e.attributes||{};if(void 0===t.nonce){var i=n.nc;i&&(t.nonce=i)}if(Object.keys(t).forEach((function(e){r.setAttribute(e,t[e])})),"function"==typeof e.insert)e.insert(r);else{var a=o(e.insert||"head");if(!a)throw new Error("Couldn't find a style target. This probably means that the value for the 'insert' parameter is invalid.");a.appendChild(r)}return r}var l,s=(l=[],function(e,r){return l[e]=r,l.filter(Boolean).join("\n")});function f(e,r,n,t){var o=n?"":t.media?"@media ".concat(t.media," {").concat(t.css,"}"):t.css;if(e.styleSheet)e.styleSheet.cssText=s(r,o);else{var i=document.createTextNode(o),a=e.childNodes;a[r]&&e.removeChild(a[r]),a.length?e.insertBefore(i,a[r]):e.appendChild(i)}}function d(e,r,n){var t=n.css,o=n.media,i=n.sourceMap;if(o?e.setAttribute("media",o):e.removeAttribute("media"),i&&"undefined"!=typeof btoa&&(t+="\n/*# sourceMappingURL=data:application/json;base64,".concat(btoa(unescape(encodeURIComponent(JSON.stringify(i))))," */")),e.styleSheet)e.styleSheet.cssText=t;else{for(;e.firstChild;)e.removeChild(e.firstChild);e.appendChild(document.createTextNode(t))}}var p=null,A=0;function h(e,r){var n,t,o;if(r.singleton){var i=A++;n=p||(p=u(r)),t=f.bind(null,n,i,!1),o=f.bind(null,n,i,!0)}else n=u(r),t=d.bind(null,n,r),o=function(){!function(e){if(null===e.parentNode)return!1;e.parentNode.removeChild(e)}(n)};return t(e),function(r){if(r){if(r.css===e.css&&r.media===e.media&&r.sourceMap===e.sourceMap)return;t(e=r)}else o()}}e.exports=function(e,r){(r=r||{}).singleton||"boolean"==typeof r.singleton||(r.singleton=(void 0===t&&(t=Boolean(window&&document&&document.all&&!window.atob)),t));var n=c(e=e||[],r);return function(e){if(e=e||[],"[object Array]"===Object.prototype.toString.call(e)){for(var t=0;t<n.length;t++){var o=a(n[t]);i[o].references--}for(var u=c(e,r),l=0;l<n.length;l++){var s=a(n[l]);0===i[s].references&&(i[s].updater(),i.splice(s,1))}n=u}}}}},r={};function n(t){if(r[t])return r[t].exports;var o=r[t]={id:t,exports:{}};return e[t](o,o.exports,n),o.exports}n.n=e=>{var r=e&&e.__esModule?()=>e.default:()=>e;return n.d(r,{a:r}),r},n.d=(e,r)=>{for(var t in r)n.o(r,t)&&!n.o(e,t)&&Object.defineProperty(e,t,{enumerable:!0,get:r[t]})},n.o=(e,r)=>Object.prototype.hasOwnProperty.call(e,r),(()=>{var e=n(379),r=n.n(e),t=n(434);r()(t.Z,{insert:"head",singleton:!1}),t.Z.locals;var o=n(394);r()(o.Z,{insert:"head",singleton:!1}),o.Z.locals;var i=n(959);r()(i.Z,{insert:"head",singleton:!1}),i.Z.locals;var a,c=n(712);r()(c.Z,{insert:"head",singleton:!1}),c.Z.locals,function(e){e[e.EMPTY=0]="EMPTY",e[e.STATIC=1]="STATIC",e[e.ACTIVE=2]="ACTIVE"}(a||(a={}));var u=function(e,r){for(var n=0,t=r.length,o=e.length;n<t;n++,o++)e[o]=r[n];return e},l=u([],Array(10)).map((function(e){return 0})),s=u([],Array(24)).map((function(){return u([],l)})),f=function(e){var r=document.createElement("div");return e.forEach((function(e,n){var t=document.createElement("div");t.className="row",e.forEach((function(e,r){var n=document.createElement("div"),o=a.EMPTY,i=a.STATIC,c=a.ACTIVE;switch(e){case o:n.className="cell empty";break;case i:n.className="cell static";break;case c:n.className="cell active";break;default:throw new Error("unidentified cell")}t.appendChild(n)})),r.appendChild(t)})),r},d=function(e,r){for(var n=0,t=r.length,o=e.length;n<t;n++,o++)e[o]=r[n];return e},p=function(e){var r=[e.pivot],n=e.forms[e.form].map((function(r){var n=r[0],t=r[1];return[e.pivot[0]+n,e.pivot[1]+t]}));return d(d([],r),n)},A=function(e,r){var n=function(e){return Array.from(e.childNodes).forEach((function(e){Array.from(e.childNodes).forEach((function(e){"cell active"===e.className&&(e.className="cell empty")}))})),e}(e);return function(e,r){return e.forEach((function(e){var n=e[0],t=e[1];r.childNodes[n].childNodes[t].className="cell active"})),r}(p(r),n)},h=[];h.push({pivot:[1,4],form:0,forms:[[[-1,0]],[[0,1]],[[1,0]],[[0,-1]]]});var v=function(e){var r=document.createElement("button");return r.textContent="Click to Start!",r.addEventListener("click",(function(){b(e,r)})),r},b=function(e,r){return e.removeChild(r),e.appendChild(m(e)),e},m=function(e){var r=document.createElement("button");return r.textContent="Click to End!",r.addEventListener("click",(function(){y(e,r)})),r},y=function(e,r){return e.removeChild(r),e.appendChild(v(e)),e};function g(e){for(var r=arguments.length,n=Array(r>1?r-1:0),t=1;t<r;t++)n[t-1]=arguments[t];throw Error("[Immer] minified error nr: "+e+(n.length?" "+n.map((function(e){return"'"+e+"'"})).join(","):"")+". Find the full error at: https://bit.ly/3cXEKWf")}function C(e){return!!e&&!!e[ae]}function w(e){return!!e&&(function(e){if(!e||"object"!=typeof e)return!1;var r=Object.getPrototypeOf(e);return!r||r===Object.prototype}(e)||Array.isArray(e)||!!e[ie]||!!e.constructor[ie]||E(e)||B(e))}function x(e,r,n){void 0===n&&(n=!1),0===I(e)?(n?Object.keys:ce)(e).forEach((function(t){n&&"symbol"==typeof t||r(t,e[t],e)})):e.forEach((function(n,t){return r(t,n,e)}))}function I(e){var r=e[ae];return r?r.i>3?r.i-4:r.i:Array.isArray(e)?1:E(e)?2:B(e)?3:0}function P(e,r){return 2===I(e)?e.has(r):Object.prototype.hasOwnProperty.call(e,r)}function k(e,r,n){var t=I(e);2===t?e.set(r,n):3===t?(e.delete(r),e.add(n)):e[r]=n}function E(e){return re&&e instanceof Map}function B(e){return ne&&e instanceof Set}function O(e){return e.o||e.t}function S(e){if(Array.isArray(e))return Array.prototype.slice.call(e);var r=ue(e);delete r[ae];for(var n=ce(r),t=0;t<n.length;t++){var o=n[t],i=r[o];!1===i.writable&&(i.writable=!0,i.configurable=!0),(i.get||i.set)&&(r[o]={configurable:!0,writable:!0,enumerable:i.enumerable,value:e[o]})}return Object.create(Object.getPrototypeOf(e),r)}function j(e,r){return void 0===r&&(r=!1),N(e)||C(e)||!w(e)||(I(e)>1&&(e.set=e.add=e.clear=e.delete=T),Object.freeze(e),r&&x(e,(function(e,r){return j(r,!0)}),!0)),e}function T(){g(2)}function N(e){return null==e||"object"!=typeof e||Object.isFrozen(e)}function M(e){var r=le[e];return r||g(18,e),r}function q(){return G}function D(e,r){r&&(M("Patches"),e.u=[],e.s=[],e.v=r)}function R(e){z(e),e.p.forEach(Z),e.p=null}function z(e){e===G&&(G=e.l)}function U(e){return G={p:[],l:G,h:e,m:!0,_:0}}function Z(e){var r=e[ae];0===r.i||1===r.i?r.j():r.g=!0}function W(e,r){r._=r.p.length;var n=r.p[0],t=void 0!==e&&e!==n;return r.h.O||M("ES5").S(r,e,t),t?(n[ae].P&&(R(r),g(4)),w(e)&&(e=_(r,e),r.l||L(r,e)),r.u&&M("Patches").M(n[ae],e,r.u,r.s)):e=_(r,n,[]),R(r),r.u&&r.v(r.u,r.s),e!==oe?e:void 0}function _(e,r,n){if(N(r))return r;var t=r[ae];if(!t)return x(r,(function(o,i){return F(e,t,r,o,i,n)}),!0),r;if(t.A!==e)return r;if(!t.P)return L(e,t.t,!0),t.t;if(!t.I){t.I=!0,t.A._--;var o=4===t.i||5===t.i?t.o=S(t.k):t.o;x(3===t.i?new Set(o):o,(function(r,i){return F(e,t,o,r,i,n)})),L(e,o,!1),n&&e.u&&M("Patches").R(t,n,e.u,e.s)}return t.o}function F(e,r,n,t,o,i){if(C(o)){var a=_(e,o,i&&r&&3!==r.i&&!P(r.D,t)?i.concat(t):void 0);if(k(n,t,a),!C(a))return;e.m=!1}if(w(o)&&!N(o)){if(!e.h.N&&e._<1)return;_(e,o),r&&r.A.l||L(e,o)}}function L(e,r,n){void 0===n&&(n=!1),e.h.N&&e.m&&j(r,n)}function Y(e,r){var n=e[ae];return(n?O(n):e)[r]}function K(e,r){if(r in e)for(var n=Object.getPrototypeOf(e);n;){var t=Object.getOwnPropertyDescriptor(n,r);if(t)return t;n=Object.getPrototypeOf(n)}}function V(e){e.P||(e.P=!0,e.l&&V(e.l))}function H(e){e.o||(e.o=S(e.t))}function X(e,r,n){var t=E(r)?M("MapSet").T(r,n):B(r)?M("MapSet").F(r,n):e.O?function(e,r){var n=Array.isArray(e),t={i:n?1:0,A:r?r.A:q(),P:!1,I:!1,D:{},l:r,t:e,k:null,o:null,j:null,C:!1},o=t,i=se;n&&(o=[t],i=fe);var a=Proxy.revocable(o,i),c=a.revoke,u=a.proxy;return t.k=u,t.j=c,u}(r,n):M("ES5").J(r,n);return(n?n.A:q()).p.push(t),t}function $(e){return C(e)||g(22,e),function e(r){if(!w(r))return r;var n,t=r[ae],o=I(r);if(t){if(!t.P&&(t.i<4||!M("ES5").K(t)))return t.t;t.I=!0,n=J(r,o),t.I=!1}else n=J(r,o);return x(n,(function(r,o){t&&function(e,r){return 2===I(e)?e.get(r):e[r]}(t.t,r)===o||k(n,r,e(o))})),3===o?new Set(n):n}(e)}function J(e,r){switch(r){case 2:return new Map(e);case 3:return Array.from(e)}return S(e)}var Q,G,ee="undefined"!=typeof Symbol&&"symbol"==typeof Symbol("x"),re="undefined"!=typeof Map,ne="undefined"!=typeof Set,te="undefined"!=typeof Proxy&&void 0!==Proxy.revocable&&"undefined"!=typeof Reflect,oe=ee?Symbol.for("immer-nothing"):((Q={})["immer-nothing"]=!0,Q),ie=ee?Symbol.for("immer-draftable"):"__$immer_draftable",ae=ee?Symbol.for("immer-state"):"__$immer_state",ce=("undefined"!=typeof Symbol&&Symbol.iterator,"undefined"!=typeof Reflect&&Reflect.ownKeys?Reflect.ownKeys:void 0!==Object.getOwnPropertySymbols?function(e){return Object.getOwnPropertyNames(e).concat(Object.getOwnPropertySymbols(e))}:Object.getOwnPropertyNames),ue=Object.getOwnPropertyDescriptors||function(e){var r={};return ce(e).forEach((function(n){r[n]=Object.getOwnPropertyDescriptor(e,n)})),r},le={},se={get:function(e,r){if(r===ae)return e;var n=O(e);if(!P(n,r))return function(e,r,n){var t,o=K(r,n);return o?"value"in o?o.value:null===(t=o.get)||void 0===t?void 0:t.call(e.k):void 0}(e,n,r);var t=n[r];return e.I||!w(t)?t:t===Y(e.t,r)?(H(e),e.o[r]=X(e.A.h,t,e)):t},has:function(e,r){return r in O(e)},ownKeys:function(e){return Reflect.ownKeys(O(e))},set:function(e,r,n){var t=K(O(e),r);if(null==t?void 0:t.set)return t.set.call(e.k,n),!0;if(!e.P){var o=Y(O(e),r),i=null==o?void 0:o[ae];if(i&&i.t===n)return e.o[r]=n,e.D[r]=!1,!0;if(function(e,r){return e===r?0!==e||1/e==1/r:e!=e&&r!=r}(n,o)&&(void 0!==n||P(e.t,r)))return!0;H(e),V(e)}return e.o[r]=n,e.D[r]=!0,!0},deleteProperty:function(e,r){return void 0!==Y(e.t,r)||r in e.t?(e.D[r]=!1,H(e),V(e)):delete e.D[r],e.o&&delete e.o[r],!0},getOwnPropertyDescriptor:function(e,r){var n=O(e),t=Reflect.getOwnPropertyDescriptor(n,r);return t?{writable:!0,configurable:1!==e.i||"length"!==r,enumerable:t.enumerable,value:n[r]}:t},defineProperty:function(){g(11)},getPrototypeOf:function(e){return Object.getPrototypeOf(e.t)},setPrototypeOf:function(){g(12)}},fe={};x(se,(function(e,r){fe[e]=function(){return arguments[0]=arguments[0][0],r.apply(this,arguments)}})),fe.deleteProperty=function(e,r){return se.deleteProperty.call(this,e[0],r)},fe.set=function(e,r,n){return se.set.call(this,e[0],r,n,e[0])};var de=new(function(){function e(e){this.O=te,this.N=!0,"boolean"==typeof(null==e?void 0:e.useProxies)&&this.setUseProxies(e.useProxies),"boolean"==typeof(null==e?void 0:e.autoFreeze)&&this.setAutoFreeze(e.autoFreeze),this.produce=this.produce.bind(this),this.produceWithPatches=this.produceWithPatches.bind(this)}var r=e.prototype;return r.produce=function(e,r,n){if("function"==typeof e&&"function"!=typeof r){var t=r;r=e;var o=this;return function(e){var n=this;void 0===e&&(e=t);for(var i=arguments.length,a=Array(i>1?i-1:0),c=1;c<i;c++)a[c-1]=arguments[c];return o.produce(e,(function(e){var t;return(t=r).call.apply(t,[n,e].concat(a))}))}}var i;if("function"!=typeof r&&g(6),void 0!==n&&"function"!=typeof n&&g(7),w(e)){var a=U(this),c=X(this,e,void 0),u=!0;try{i=r(c),u=!1}finally{u?R(a):z(a)}return"undefined"!=typeof Promise&&i instanceof Promise?i.then((function(e){return D(a,n),W(e,a)}),(function(e){throw R(a),e})):(D(a,n),W(i,a))}if(!e||"object"!=typeof e){if((i=r(e))===oe)return;return void 0===i&&(i=e),this.N&&j(i,!0),i}g(21,e)},r.produceWithPatches=function(e,r){var n,t,o=this;return"function"==typeof e?function(r){for(var n=arguments.length,t=Array(n>1?n-1:0),i=1;i<n;i++)t[i-1]=arguments[i];return o.produceWithPatches(r,(function(r){return e.apply(void 0,[r].concat(t))}))}:[this.produce(e,r,(function(e,r){n=e,t=r})),n,t]},r.createDraft=function(e){w(e)||g(8),C(e)&&(e=$(e));var r=U(this),n=X(this,e,void 0);return n[ae].C=!0,z(r),n},r.finishDraft=function(e,r){var n=(e&&e[ae]).A;return D(n,r),W(void 0,n)},r.setAutoFreeze=function(e){this.N=e},r.setUseProxies=function(e){e&&!te&&g(20),this.O=e},r.applyPatches=function(e,r){var n;for(n=r.length-1;n>=0;n--){var t=r[n];if(0===t.path.length&&"replace"===t.op){e=t.value;break}}var o=M("Patches").$;return C(e)?o(e,r):this.produce(e,(function(e){return o(e,r.slice(n+1))}))},e}()),pe=de.produce;de.produceWithPatches.bind(de),de.setAutoFreeze.bind(de),de.setUseProxies.bind(de),de.applyPatches.bind(de),de.createDraft.bind(de),de.finishDraft.bind(de);const Ae=pe;var he=function(e){return Ae(e[Math.floor(Math.random()*e.length)],(function(e){return e}))},ve=document.querySelector("body"),be=s,me=he(h),ye=f(be),ge=A(ye,me);ve.appendChild(function(){var e=document.createElement("div");e.className="head";var r=document.createElement("h1");r.textContent="Tetris!",e.appendChild(r);var n=document.createElement("div");return n.className="dashboard",n.appendChild(v(n)),e.appendChild(n),e}()),ve.appendChild(ge);var Ce=function(e,r){var n=he(h),t=s,o=r,i=setInterval((function(){var r,c,u,l;r=t,c=Ae(n,(function(e){e.pivot[0]+=1})),u=p(c),l=!0,u.forEach((function(e){var n=e[0],t=e[1];(n>23||r[n][t]===a.STATIC)&&(l=!1)})),l?(n=Ae(n,(function(e){e.pivot[0]+=1})),e.removeChild(o),o=A(o,n),e.appendChild(o)):(e.removeChild(o),t=function(e,r){var n=p(e);return console.log("transformDeez",n),Ae(r,(function(e){n.forEach((function(r){var n=r[0],t=r[1];e[n][t]=a.STATIC}))}))}(n,t),o=f(t),function(e,r){var n=p(e),t=!0;return n.forEach((function(e){var n=e[0],o=e[1];r[n][o]===a.STATIC&&(t=!1)})),t}(n=he(h),t)||clearInterval(i),o=A(o,n),e.appendChild(o))}),100);return i}(ve,ge);setTimeout((function(){clearInterval(Ce)}),5e4)})()})();
//# sourceMappingURL=data:application/json;charset=utf-8;base64,